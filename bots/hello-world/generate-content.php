<?php

/**
 * Hello World Content Generator
 * 
 * Simple bot that generates Hello World articles for testing
 */

require_once __DIR__ . '/../../src/bootstrap.php';

use Nostrbots\Utils\ErrorHandler;

class HelloWorldGenerator
{
    private string $botDir;
    private array $config;
    private ErrorHandler $errorHandler;
    
    public function __construct(string $botDir)
    {
        $this->botDir = $botDir;
        $this->config = $this->loadConfig();
        $this->errorHandler = new ErrorHandler(true);
    }
    
    private function loadConfig(): array
    {
        $configFile = $this->botDir . '/config.json';
        if (!file_exists($configFile)) {
            throw new \Exception("Configuration file not found: $configFile");
        }
        
        $config = json_decode(file_get_contents($configFile), true);
        if (json_last_error() !== JSON_ERROR_NONE) {
            throw new \Exception("Invalid JSON in configuration file: " . json_last_error_msg());
        }
        
        return $config;
    }
    
    public function generateContent(): void
    {
        $currentTime = new DateTime('now', new DateTimeZone('UTC'));
        $date = $currentTime->format('Y-m-d');
        $time = $currentTime->format('H:i');
        
        echo "🌍 Generating Hello World content for $date at $time UTC\n";
        
        // Generate simple content
        $content = $this->buildContent($currentTime);
        
        // Save to output directory
        $this->saveContent($content, $date, $time);
        
        echo "✅ Hello World content generated successfully\n";
    }
    
    private function buildContent(DateTime $dateTime): string
    {
        $date = $dateTime->format('l, F j, Y');
        $time = $dateTime->format('H:i');
        $timestamp = $dateTime->format('c');
        
        // Simple Hello World content
        $content = "= Hello World from Nostrbots!\n";
        $content .= "author: Hello World Bot\n";
        $content .= "version: 1.0\n";
        $content .= "relays: test-relays\n";
        $content .= "auto_update: true\n";
        $content .= "summary: A simple Hello World article published by Nostrbots\n";
        $content .= "type: article\n";
        $content .= "bot_type: hello-world\n";
        $content .= "generated_at: $timestamp\n\n";
        
        $content .= "**Hello, Nostr World!** 🌍\n\n";
        
        $content .= "This is a simple test article generated by the Nostrbots Hello World bot.\n\n";
        
        $content .= "== What is this?\n\n";
        $content .= "This article was automatically generated and published to Nostr using:\n\n";
        $content .= "- **Nostrbots**: A PHP tool for publishing content to Nostr\n";
        $content .= "- **Event Kind 30041**: Publication Content (AsciiDoc format)\n";
        $content .= "- **Test Relays**: Using test relays for safe experimentation\n";
        $content .= "- **Generated**: $date at $time UTC\n\n";
        
        $content .= "== Bot Information\n\n";
        $content .= "- **Bot Name**: {$this->config['name']}\n";
        $content .= "- **Author**: {$this->config['author']}\n";
        $content .= "- **Version**: {$this->config['version']}\n";
        $content .= "- **Content Kind**: {$this->config['content_kind']}\n";
        $content .= "- **Relays**: " . implode(', ', $this->config['relays']) . "\n\n";
        
        $content .= "== Getting Started\n\n";
        $content .= "If you're seeing this article, it means:\n\n";
        $content .= "1. ✅ Nostrbots is working correctly\n";
        $content .= "2. ✅ The bot can connect to Nostr relays\n";
        $content .= "3. ✅ Content generation is functioning\n";
        $content .= "4. ✅ Publishing to Nostr is successful\n\n";
        
        $content .= "== Next Steps\n\n";
        $content .= "Now you can:\n\n";
        $content .= "- Create your own bots using the setup script\n";
        $content .= "- Customize content generation logic\n";
        $content .= "- Set up scheduled publishing\n";
        $content .= "- Use production relays for real content\n\n";
        
        $content .= "== Technical Details\n\n";
        $content .= "This article was generated using:\n\n";
        $content .= "- **PHP**: " . PHP_VERSION . "\n";
        $content .= "- **Nostrbots**: Version 2.0\n";
        $content .= "- **Format**: AsciiDoc\n";
        $content .= "- **Event Kind**: 30041 (Publication Content)\n";
        $content .= "- **Relays**: Test relays for safe experimentation\n\n";
        
        $content .= "---\n\n";
        $content .= "*Generated by Nostrbots Hello World Bot at $timestamp*\n";
        
        return $content;
    }
    
    private function saveContent(string $content, string $date, string $time): void
    {
        $outputDir = $this->botDir . '/output';
        if (!is_dir($outputDir)) {
            mkdir($outputDir, 0755, true);
        }
        
        $filename = "hello-world-{$date}-{$time}.adoc";
        $filepath = $outputDir . '/' . $filename;
        
        if (file_put_contents($filepath, $content) === false) {
            throw new \Exception("Failed to save content to: $filepath");
        }
        
        echo "📄 Content saved to: $filename\n";
    }
}

// Main execution
if (php_sapi_name() === 'cli' && basename(__FILE__) === basename($_SERVER['SCRIPT_NAME'])) {
    try {
        $botDir = $argv[1] ?? __DIR__;
        $generator = new HelloWorldGenerator($botDir);
        $generator->generateContent();
    } catch (Exception $e) {
        echo "❌ Error: " . $e->getMessage() . "\n";
        exit(1);
    }
}
