version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - /opt/nostrbots/data/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - nostrbots-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200/_cluster/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    ports:
      - "5601:5601"
    networks:
      - nostrbots-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5601/api/status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    volumes:
      - /opt/nostrbots/config/logstash:/usr/share/logstash/pipeline
      - /var/log/nostrbots:/var/log/nostrbots:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - LS_JAVA_OPTS=-Xmx512m -Xms512m
    networks:
      - nostrbots-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G

  orly-relay:
    image: silberengel/next-orly:latest
    environment:
      - ORLY_LISTEN=0.0.0.0
      - ORLY_PORT=7777
      - ORLY_LOG_LEVEL=info
      - ORLY_MAX_CONNECTIONS=1000
      - ORLY_ACL_MODE=none
    volumes:
      - /opt/nostrbots/data/orly:/data
    secrets:
      - nostr_bot_key_encrypted
      - nostr_bot_npub
    networks:
      - nostrbots-network
    ports:
      - "3334:7777"
    user: "995:982"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=orly-relay"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "7777"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - "8080:8080"
      - "50000:50000"
    environment:
      - JENKINS_OPTS=--httpPort=8080
      - NOSTR_BOT_KEY_ENCRYPTED_FILE=/run/secrets/nostr_bot_key_encrypted
      - NOSTR_BOT_NPUB_FILE=/run/secrets/nostr_bot_npub
      - NOSTRBOTS_PASSWORD=${NOSTRBOTS_PASSWORD:-nostrbots123}
      - JENKINS_ADMIN_ID=${JENKINS_ADMIN_ID:-admin}
      - JENKINS_ADMIN_PASSWORD=${JENKINS_ADMIN_PASSWORD:-admin}
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false
    volumes:
      - /opt/nostrbots/data/jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/nostrbots:/workspace
      - /opt/nostrbots/scripts/jenkins-setup.groovy:/usr/share/jenkins/ref/init.groovy.d/setup.groovy
    secrets:
      - nostr_bot_key_encrypted
      - nostr_bot_npub
    networks:
      - nostrbots-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=jenkins"
    user: root
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
    command: >
      bash -c "
        apt-get update &&
        apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release &&
        curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg &&
        echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian bookworm stable' | tee /etc/apt/sources.list.d/docker.list > /dev/null &&
        apt-get update &&
        apt-get install -y docker-ce-cli &&
        /usr/local/bin/jenkins.sh
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/login"]
      interval: 30s
      timeout: 10s
      retries: 5

  nostrbots-agent:
    image: jenkins/jenkins:lts
    environment:
      - JENKINS_AGENT_SSH_PUBKEY=${JENKINS_AGENT_SSH_PUBKEY:-}
      - NOSTR_BOT_KEY_ENCRYPTED_FILE=/run/secrets/nostr_bot_key_encrypted
      - NOSTR_BOT_NPUB_FILE=/run/secrets/nostr_bot_npub
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/nostrbots:/workspace
    secrets:
      - nostr_bot_key_encrypted
      - nostr_bot_npub
    networks:
      - nostrbots-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=nostrbots-agent"

  backup-agent:
    image: silberengel/nostrbots:latest
    environment:
      - NOSTR_BOT_KEY_ENCRYPTED_FILE=/run/secrets/nostr_bot_key_encrypted
      - NOSTR_BOT_NPUB_FILE=/run/secrets/nostr_bot_npub
      - BACKUP_DIR=/backups
      - DATA_DIR=/data
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    volumes:
      - /opt/nostrbots/backups:/backups
      - /opt/nostrbots/data:/data
      - /opt/nostrbots:/workspace
    secrets:
      - nostr_bot_key_encrypted
      - nostr_bot_npub
    networks:
      - nostrbots-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=backup-agent"
    command: >
      sh -c "
        echo '🔄 Efficient backup agent started' &&
        echo '👤 Current user: $$(whoami) $$(id)' &&
        echo '📁 Checking workspace contents:' &&
        ls -la /workspace/ &&
        echo '📁 Checking scripts directory:' &&
        ls -la /workspace/scripts/ &&
        echo '🔧 Installing bash for script compatibility...' &&
        apk add --no-cache bash &&
        echo '🔧 Copying and fixing script permissions...' &&
        cp /workspace/scripts/backup-essential-data.sh /tmp/backup-essential-data.sh &&
        chmod +x /tmp/backup-essential-data.sh &&
        echo '⏰ Starting efficient daily backup at $$(date)' &&
        if [ -f /tmp/backup-essential-data.sh ]; then
          bash /tmp/backup-essential-data.sh
        else
          echo '❌ Efficient backup script not found, falling back to basic backup...'
          mkdir -p /backups
          echo 'Basic backup created at $$(date)' > /backups/backup-$$(date +%Y%m%d-%H%M%S).txt
        fi &&
        echo '✓ Efficient backup completed at $$(date)' &&
        sleep 86400
      "

  event-indexer:
    image: silberengel/nostrbots:latest
    environment:
      - NOSTR_BOT_KEY_ENCRYPTED_FILE=/run/secrets/nostr_bot_key_encrypted
      - NOSTR_BOT_NPUB_FILE=/run/secrets/nostr_bot_npub
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - RELAY_URLS=ws://orly-relay:7777,wss://aggr.nostr.land,wss://nostr.land,wss://orly-relay.imwald.eu,wss://thecitadel.nostr1.com,wss://freelay.sovbit.host,wss://nostr.sovbit.host,wss://theforest.nostr1.com,wss://nostr21.com
      - RELAY_BATCH_SIZE=3
      - REQUEST_DELAY_MS=10000
      - CONNECTION_TIMEOUT=30
      - MAX_CONCURRENT_CONNECTIONS=3
      - BACKGROUND_MODE=true
      - MAX_EVENTS=10000
    volumes:
      - /opt/nostrbots:/workspace
    secrets:
      - nostr_bot_key_encrypted
      - nostr_bot_npub
    networks:
      - nostrbots-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=event-indexer"
    command: >
      sh -c "
        echo 'Event indexer started' &&
        echo '👤 Current user: $$(whoami) $$(id)' &&
        echo '📁 Checking workspace contents:' &&
        ls -la /workspace/ &&
        echo '📁 Checking scripts directory:' &&
        ls -la /workspace/scripts/ &&
        echo '🔧 Copying and fixing script permissions...' &&
        cp -r /workspace/vendor / &&
        cp -r /workspace/src / &&
        cp /workspace/scripts/index-relay-events.php /tmp/index-relay-events.php &&
        chmod +x /tmp/index-relay-events.php &&
        echo '⏰ Starting event indexing at $$(date)' &&
        if [ -f /tmp/index-relay-events.php ]; then
          php /tmp/index-relay-events.php
        else
          echo '❌ Indexing script not found, creating basic index...'
          echo 'Basic event indexing at $$(date)' > /tmp/index-$$(date +%Y%m%d-%H%M%S).log
        fi &&
        echo '✓ Event indexing completed at $$(date)' &&
        sleep 300
      "

secrets:
  nostr_bot_key_encrypted:
    external: true
  nostr_bot_npub:
    external: true

networks:
  nostrbots-network:
    driver: overlay
