// Nostrbots v2.0 Jenkins Pipeline Example
// This pipeline publishes a long-form article using the new architecture

pipeline {
    agent any
    
    // Environment variables for bot credentials
    environment {
        NOSTR_BOT_KEY1 = credentials('NOSTR_BOT_KEY1')
    }

    stages {
        stage('Setup') {
            steps {
                echo 'üöÄ Setting up Nostrbots environment...'
                sh 'composer install --no-dev --optimize-autoloader'
            }
        }

        stage('Validate Configuration') {
            steps {
                echo '‚úÖ Validating bot configuration...'
                script {
                    def output = sh(returnStdout: true, script: 'php nostrbots.php longFormExample --dry-run')
                    echo "Validation output: ${output}"
                }
            }
        }

        stage('Publish Article') {
            steps {
                echo 'üìù Publishing long-form article...'
                script {
                    def output = sh(returnStdout: true, script: 'php nostrbots.php longFormExample --verbose')
                    echo "Publication output: ${output}"
                    
                    // Extract viewing URL from output for build description
                    def matcher = output =~ /View at: (https:\/\/[^\s]+)/
                    if (matcher) {
                        def viewUrl = matcher[0][1]
                        currentBuild.description = "üìñ <a href='${viewUrl}'>View Published Article</a>"
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'üéâ Article published successfully!'
        }
        failure {
            echo 'üí• Article publication failed!'
        }
        always {
            // Archive any logs or artifacts if needed
            archiveArtifacts artifacts: '*.log', fingerprint: true, allowEmptyArchive: true
        }
    }
}

// Schedule this pipeline to run daily at 9 AM
// Uncomment the line below and adjust timing as needed:
// @daily
