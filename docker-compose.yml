version: '3.8'

services:
  key-generator:
    image: silberengel/nostrbots:latest
    container_name: nostrbots-key-generator
    volumes:
      - nostrbots_keys:/keys
    command: >
      sh -c "
        echo 'üîë Generating unified Nostrbots keys...' &&
        php generate-key.php --quiet > /tmp/keys.txt 2>/dev/null &&
        PRIVATE_KEY=$$(grep 'NOSTR_BOT_KEY=' /tmp/keys.txt | cut -d'=' -f2) &&
        NPUB=$$(grep 'NOSTR_BOT_NPUB=' /tmp/keys.txt | cut -d'=' -f2) &&
        echo \"NOSTR_BOT_KEY=$$PRIVATE_KEY\" > /keys/nostrbots.env &&
        echo \"NOSTR_BOT_NPUB=$$NPUB\" >> /keys/nostrbots.env &&
        echo \"NOSTR_BOT_KEY_ENCRYPTED=$$PRIVATE_KEY\" >> /keys/nostrbots.env &&
        rm -f /tmp/keys.txt &&
        echo '‚úÖ Keys generated and stored in shared volume' &&
        echo 'Private Key: ' $$PRIVATE_KEY &&
        echo 'Public Key: ' $$NPUB
      "
    networks:
      - nostrbots-network

  orly-relay:
    image: silberengel/next-orly:latest
    container_name: orly-relay
    restart: unless-stopped
    ports:
      - "3334:7777"
    environment:
      - ORLY_LISTEN=0.0.0.0
      - ORLY_PORT=7777
      - ORLY_LOG_LEVEL=info
      - ORLY_MAX_CONNECTIONS=1000
      - ORLY_ACL_MODE=none
    volumes:
      - orly_data:/data
      - nostrbots_keys:/keys:ro
    networks:
      - nostrbots-network
    depends_on:
      - key-generator
    command: >
      sh -c "
        echo '‚è≥ Waiting for keys...' &&
        RETRY_COUNT=0 &&
        MAX_RETRIES=30 &&
        while [ ! -f /keys/nostrbots.env ] && [ $$RETRY_COUNT -lt $$MAX_RETRIES ]; do
          echo '‚è≥ Waiting for key generation... ($$RETRY_COUNT/$$MAX_RETRIES)' &&
          sleep 2 &&
          RETRY_COUNT=$$((RETRY_COUNT+1))
        done &&
        if [ ! -f /keys/nostrbots.env ]; then
          echo '‚ùå ERROR: Key file not found after $$MAX_RETRIES retries' &&
          exit 1
        fi &&
        NPUB=$$(grep 'NOSTR_BOT_NPUB=' /keys/nostrbots.env | cut -d'=' -f2) &&
        if [ -z \"$$NPUB\" ]; then
          echo '‚ùå ERROR: NOSTR_BOT_NPUB not found in key file' &&
          exit 1
        fi &&
        echo '‚úÖ Using npub:' $$NPUB &&
        export ORLY_OWNERS=$$NPUB &&
        export ORLY_ADMINS=$$NPUB &&
        /app/relay
      "
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "7777"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins-nostrbots
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "50000:50000"
    environment:
      - JENKINS_OPTS=--httpPort=8080
      - NOSTRBOTS_PASSWORD=nostrbots123
      - JENKINS_ADMIN_ID=admin
      - JENKINS_ADMIN_PASSWORD=admin
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/workspace
      - ./setup-jenkins-job.groovy:/usr/share/jenkins/ref/init.groovy.d/setup.groovy
      - nostrbots_keys:/keys:ro
    networks:
      - nostrbots-network
    depends_on:
      - key-generator
    command: >
      sh -c "
        echo '‚è≥ Waiting for keys...' &&
        RETRY_COUNT=0 &&
        MAX_RETRIES=30 &&
        while [ ! -f /keys/nostrbots.env ] && [ $$RETRY_COUNT -lt $$MAX_RETRIES ]; do
          echo '‚è≥ Waiting for key generation... ($$RETRY_COUNT/$$MAX_RETRIES)' &&
          sleep 2 &&
          RETRY_COUNT=$$((RETRY_COUNT+1))
        done &&
        if [ ! -f /keys/nostrbots.env ]; then
          echo '‚ùå ERROR: Key file not found after $$MAX_RETRIES retries' &&
          exit 1
        fi &&
        . /keys/nostrbots.env &&
        if [ -z \"$$NOSTR_BOT_KEY_ENCRYPTED\" ] || [ -z \"$$NOSTR_BOT_NPUB\" ]; then
          echo '‚ùå ERROR: Required keys not found in key file' &&
          echo 'NOSTR_BOT_KEY_ENCRYPTED='$$NOSTR_BOT_KEY_ENCRYPTED &&
          echo 'NOSTR_BOT_NPUB='$$NOSTR_BOT_NPUB &&
          exit 1
        fi &&
        echo '‚úÖ Jenkins loaded keys:' &&
        echo 'NOSTR_BOT_KEY_ENCRYPTED='$$NOSTR_BOT_KEY_ENCRYPTED &&
        echo 'NOSTR_BOT_NPUB='$$NOSTR_BOT_NPUB &&
        /usr/local/bin/jenkins.sh
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/login"]
      interval: 30s
      timeout: 10s
      retries: 5

  nostrbots-agent:
    image: jenkins/jenkins:lts
    container_name: nostrbots-agent
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/workspace
      - nostrbots_keys:/keys:ro
    networks:
      - nostrbots-network
    depends_on:
      - jenkins
    command: >
      sh -c "
        echo '‚è≥ Waiting for keys...' &&
        RETRY_COUNT=0 &&
        MAX_RETRIES=30 &&
        while [ ! -f /keys/nostrbots.env ] && [ $$RETRY_COUNT -lt $$MAX_RETRIES ]; do
          echo '‚è≥ Waiting for key generation... ($$RETRY_COUNT/$$MAX_RETRIES)' &&
          sleep 2 &&
          RETRY_COUNT=$$((RETRY_COUNT+1))
        done &&
        if [ ! -f /keys/nostrbots.env ]; then
          echo '‚ùå ERROR: Key file not found after $$MAX_RETRIES retries' &&
          exit 1
        fi &&
        . /keys/nostrbots.env &&
        if [ -z \"$$NOSTR_BOT_KEY_ENCRYPTED\" ] || [ -z \"$$NOSTR_BOT_NPUB\" ]; then
          echo '‚ùå ERROR: Required keys not found in key file' &&
          echo 'NOSTR_BOT_KEY_ENCRYPTED='$$NOSTR_BOT_KEY_ENCRYPTED &&
          echo 'NOSTR_BOT_NPUB='$$NOSTR_BOT_NPUB &&
          exit 1
        fi &&
        echo '‚úÖ Nostrbots agent loaded keys:' &&
        echo 'NOSTR_BOT_KEY_ENCRYPTED='$$NOSTR_BOT_KEY_ENCRYPTED &&
        echo 'NOSTR_BOT_NPUB='$$NOSTR_BOT_NPUB &&
        tail -f /dev/null
      "

volumes:
  jenkins_home:
  orly_data:
  nostrbots_keys:

networks:
  nostrbots-network:
    driver: bridge