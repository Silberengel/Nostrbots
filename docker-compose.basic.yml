version: '3.8'

services:
  orly-relay:
    image: silberengel/next-orly:latest
    environment:
      - ORLY_LISTEN=0.0.0.0
      - ORLY_PORT=7777
      - ORLY_LOG_LEVEL=info
      - ORLY_MAX_CONNECTIONS=1000
      - ORLY_ACL_MODE=none
    volumes:
      - /opt/nostrbots/data/orly:/data
    secrets:
      - nostr_bot_key_encrypted
      - nostr_bot_npub
    networks:
      - nostrbots-network
    ports:
      - "3334:7777"
    user: "995:982"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=orly-relay"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "7777"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  jenkins:
    image: jenkins/jenkins:lts
    ports:
      - "8080:8080"
      - "50000:50000"
    environment:
      - JENKINS_OPTS=--httpPort=8080
      - NOSTR_BOT_KEY_ENCRYPTED_FILE=/run/secrets/nostr_bot_key_encrypted
      - NOSTR_BOT_NPUB_FILE=/run/secrets/nostr_bot_npub
      - NOSTRBOTS_PASSWORD=${NOSTRBOTS_PASSWORD:-nostrbots123}
      - JENKINS_ADMIN_ID=${JENKINS_ADMIN_ID:-admin}
      - JENKINS_ADMIN_PASSWORD=${JENKINS_ADMIN_PASSWORD:-admin}
    volumes:
      - /opt/nostrbots/data/jenkins:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/nostrbots:/workspace
      - /opt/nostrbots/scripts/jenkins-setup.groovy:/usr/share/jenkins/ref/init.groovy.d/setup.groovy
    secrets:
      - nostr_bot_key_encrypted
      - nostr_bot_npub
    networks:
      - nostrbots-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=jenkins"
    user: root
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
    command: >
      bash -c "
        apt-get update &&
        apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release &&
        curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg &&
        echo 'deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian bookworm stable' | tee /etc/apt/sources.list.d/docker.list > /dev/null &&
        apt-get update &&
        apt-get install -y docker-ce-cli &&
        /usr/local/bin/jenkins.sh
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/login"]
      interval: 30s
      timeout: 10s
      retries: 5

  nostrbots-agent:
    image: jenkins/jenkins:lts
    environment:
      - JENKINS_AGENT_SSH_PUBKEY=${JENKINS_AGENT_SSH_PUBKEY:-}
      - NOSTR_BOT_KEY_ENCRYPTED_FILE=/run/secrets/nostr_bot_key_encrypted
      - NOSTR_BOT_NPUB_FILE=/run/secrets/nostr_bot_npub
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/nostrbots:/workspace
    secrets:
      - nostr_bot_key_encrypted
      - nostr_bot_npub
    networks:
      - nostrbots-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=nostrbots-agent"

  backup-agent:
    image: silberengel/nostrbots:latest
    environment:
      - NOSTR_BOT_KEY_ENCRYPTED_FILE=/run/secrets/nostr_bot_key_encrypted
      - NOSTR_BOT_NPUB_FILE=/run/secrets/nostr_bot_npub
      - BACKUP_DIR=/backups
      - DATA_DIR=/data
    volumes:
      - /opt/nostrbots/backups:/backups
      - /opt/nostrbots/data:/data
      - /opt/nostrbots:/workspace
    secrets:
      - nostr_bot_key_encrypted
      - nostr_bot_npub
    networks:
      - nostrbots-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=backup-agent"
    command: >
      sh -c "
        echo '🔄 Efficient backup agent started' &&
        echo '👤 Current user: $$(whoami) $$(id)' &&
        echo '📁 Checking workspace contents:' &&
        ls -la /workspace/ &&
        echo '📁 Checking scripts directory:' &&
        ls -la /workspace/scripts/ &&
        echo '🔧 Copying and fixing script permissions...' &&
        cp /workspace/scripts/backup-essential-data.sh /tmp/backup-essential-data.sh &&
        chmod +x /tmp/backup-essential-data.sh &&
        echo '⏰ Starting efficient daily backup at $$(date)' &&
        if [ -f /tmp/backup-essential-data.sh ]; then
          sh /tmp/backup-essential-data.sh
        else
          echo '❌ Efficient backup script not found, falling back to basic backup...'
          mkdir -p /backups
          echo 'Basic backup created at $$(date)' > /backups/backup-$$(date +%Y%m%d-%H%M%S).txt
        fi &&
        echo '✓ Efficient backup completed at $$(date)' &&
        sleep 86400
      "

secrets:
  nostr_bot_key_encrypted:
    external: true
  nostr_bot_npub:
    external: true

networks:
  nostrbots-network:
    driver: overlay
